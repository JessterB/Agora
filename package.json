{
  "name": "agora",
  "version": "1.0.0",
  "data-version": "10",
  "description": "An application to aggregate genomic evidence supporting candidate gene and module targets nominated by members of the AMP-AD consortium.",
  "keywords": [
    "angular",
    "angular2",
    "angular4",
    "angular5",
    "webpack",
    "typescript",
    "gene",
    "alzheimer"
  ],
  "author": "Renan Dembogurski <renan.augusto@toptal.com>",
  "homepage": "https://github.com/Sage-Bionetworks/Agora",
  "license": "MIT",
  "scripts": {
    "analyze:aot:prod": "cross-env Analyzer=true npm run build:aot:prod",
    "build:aot:prod": "npm run clean:dist && mkdirp ./dist && npm run build-ngsw && npm run clean:aot && cross-env BUILD_AOT=1 SOURCE_MAP=1 npm run webpack -- --config config/webpack.prod.js  --progress --profile --bail",
    "build:aot": "npm run build:aot:prod",
    "build:aot:dev": "cross-env BUILD_AOT=1 npm run build:dev",
    "build:dev": "npm run clean:dist && npm run build-ngsw && npm run webpack -- --config config/webpack.dev.js --progress --profile --trace-deprecation",
    "build:prod": "npm run clean:dist && mkdirp ./dist && npm run build-ngsw && npm run webpack -- --config config/webpack.prod.js  --progress --profile --bail",
    "build:server:dev": "npm run clean:server && cross-env APP_ENV=develop PORT=8080 NODE_ENV=development npm run webpack:server -- --config config/webpack.server.js --mode development --progress --profile --bail",
    "build:server:staging": "npm run clean:server && cross-env APP_ENV=staging PORT=8080 NODE_ENV=production npm run webpack:server -- --config config/webpack.server.js --mode development --progress --profile --bail",
    "build:server:prod": "npm run clean:server && cross-env APP_ENV=prod PORT=8080 NODE_ENV=production npm run webpack:server -- --config config/webpack.server.js --mode development --progress --profile --bail",
    "build": "npm run build:dev",
    "bundle-report": "webpack-bundle-analyzer dist/stats.json",
    "ci:aot": "cross-env BUILD_E2E=1 npm run lint && npm run test && npm run build:aot && npm run e2e",
    "ci:jit": "cross-env BUILD_E2E=1 npm run lint && npm run test && npm run build:prod && npm run e2e",
    "ci:nobuild": "npm run lint && npm test && npm run e2e",
    "ci:testall": "cross-env BUILD_E2E=1 npm run lint && npm run test && npm run build:prod && npm run e2e && npm run build:aot && npm run e2e",
    "ci:travis": "cross-env BUILD_E2E=1 npm run lint && npm run test && npm run build:aot && npm run e2e:travis",
    "ci": "npm run ci:testall",
    "clean:all": "npm run rimraf -- doc coverage dist compiled webpack-cache",
    "clean:cache": "npm run rimraf -- webpack-cache",
    "clean:aot": "npm run rimraf -- compiled",
    "clean:dist": "npm run rimraf -- \"dist/**/!(server.js)\"",
    "clean:server": "npm run rimraf dist/server.js",
    "clean:install": "npm set progress=false && npm install",
    "clean": "npm cache clean --force && npm run rimraf -- node_modules doc coverage dist compiled dll",
    "clean:data": "npm run rimraf ../data/*.json || true && npm run rimraf ../data/team_images/*.jpg || true",
    "data:local": "npm run clean:data && sh get-data-local.sh",
    "data:local-aws": "npm run clean:data && sh get-data-local-aws.sh",
    "data:aws": "npm run clean:data && sh get-data-aws.sh",
    "docs": "npm run typedoc -- --options typedoc.json --exclude '**/*.spec.ts' ./src/",
    "docs:compodoc": "compodoc -p tsconfig.json",
    "docs:compodoc:serve": "compodoc -p tsconfig.json -s",
    "docs:compodoc:serve:watch": "compodoc -p tsconfig.json -s -w",
    "e2e:live": "npm-run-all -p -r server:prod:ci protractor:live",
    "e2e:travis": "npm-run-all -p -r server:prod:ci protractor:delay",
    "e2e": "npm-run-all -p -r server:prod:ci protractor",
    "github-deploy:dev": "npm run webpack -- --config config/webpack.github-deploy.js --progress --profile --env.githubDev",
    "github-deploy:prod": "npm run webpack -- --config config/webpack.github-deploy.js --progress --profile --env.githubProd",
    "github-deploy": "npm run github-deploy:dev",
    "lint": "npm run tslint \"src/**/*.ts\"",
    "mongo:import": "sh mongo-import.sh",
    "node": "node",
    "ngsw-config": "node_modules/.bin/ngsw-config ./dist ngsw-config.json",
    "ngsw-copy": "cp node_modules/@angular/service-worker/ngsw-worker.js dist/",
    "build-ngsw": "npm run ngsw-config && npm run ngsw-copy",
    "postinstall": "npm run webdriver:update",
    "postversion": "git push && git push --tags",
    "preclean:install": "npm run clean",
    "preversion": "npm test",
    "protractor": "protractor",
    "protractor:delay": "sleep 3 && npm run protractor",
    "protractor:live": "protractor --elementExplorer",
    "rimraf": "rimraf",
    "server": "npm run watch:server:dev",
    "server:aot": "npm run server:aot:dev",
    "server:aot:dev": "cross-env BUILD_AOT=1 npm run server:dev",
    "server:coverage": "http-server -c-1 -o -p 9875 ./coverage",
    "server:dev": "npm run build:server:dev -- --open",
    "server:dev:hmr": "npm run server:dev -- --hotOnly",
    "server:prod": "cross-env PORT=8080 NODE_ENV=production npm run webpack:server -- --config config/webpack.server.js  --progress --profile --bail",
    "server:prod:ci": "http-server dist -p 8080 -c-1 --cors",
    "server:staging": "cross-env PORT=8080 NODE_ENV=production npm run webpack:server -- --config config/webpack.server.js  --progress --profile --bail",
    "server:wds": "npm run webpack-dev-server -- --config config/webpack.server.js --open --progress --profile --watch --content-base src/",
    "start": "npm run server",
    "start:mongo": "sh start-mongo.sh '/var/lib/mongodb/'",
    "start:mongo:windows": "sh start-mongo.sh 'C:\\data\\db'",
    "start:prod": "npm run watch:server:prod",
    "start:hmr": "npm run server:dev:hmr",
    "test": "npm run lint && karma start",
    "test:load": "artillery run load.yml",
    "tslint": "tslint",
    "typedoc": "typedoc",
    "version": "npm run build",
    "watch:dev:hmr": "cross-env Analyzer=true npm run watch:dev -- --hot",
    "watch:dev": "cross-env Analyzer=true npm run build:dev -- --watch",
    "watch:aot:dev": "cross-env Analyzer=true npm run build:aot:dev -- --watch",
    "watch:prod": "cross-env Analyzer=true npm run build:prod -- --watch",
    "watch:aot:prod": "cross-env Analyzer=true npm run build:aot:prod -- --watch",
    "watch:server:dev": "npm run build:server:dev -- --watch",
    "watch:server:prod": "npm run build:server:prod -- --watch",
    "watch:test": "npm run test -- --auto-watch --no-single-run",
    "watch": "npm run watch:dev",
    "webdriver-manager": "node ./node_modules/protractor/bin/webdriver-manager",
    "webdriver:start": "node ./node_modules/protractor/bin/webdriver-manager start",
    "webdriver:update": "node ./node_modules/protractor/bin/webdriver-manager update --gecko=false",
    "webpack-dev-server": "node --max_old_space_size=6000 node_modules/webpack-dev-server/bin/webpack-dev-server.js",
    "webpack": "node --max_old_space_size=6000 node_modules/webpack/bin/webpack.js",
    "webpack:server": "node --max_old_space_size=2000 node_modules/webpack/bin/webpack.js"
  },
  "dependencies": {
    "@angular/animations": "^7.2.8",
    "@angular/common": "^7.2.8",
    "@angular/compiler": "^7.2.8",
    "@angular/core": "^7.2.8",
    "@angular/forms": "^7.2.8",
    "@angular/http": "^7.2.8",
    "@angular/platform-browser": "^7.2.8",
    "@angular/platform-browser-dynamic": "^7.2.8",
    "@angular/platform-server": "^7.2.8",
    "@angular/router": "^7.2.8",
    "@angular/service-worker": "^7.2.8",
    "@types/dc": "^0.0.28",
    "@types/express": "^4.16.0",
    "aws-param-store": "^2.1.0",
    "aws-sdk": "^2.371.0",
    "body-parser": "^1.18.3",
    "core-js": "^2.6.0",
    "cors": "^2.8.5",
    "express": "^4.16.4",
    "gridfs": "^1.0.0",
    "hammerjs": "^2.0.8",
    "http-server": "^0.11.1",
    "ie-shim": "^0.1.0",
    "mongodb": "^3.1.10",
    "mongoose": "^5.3.15",
    "opencollective": "^1.0.3",
    "primeicons": "^1.0.0",
    "primeng": "^7.0.0",
    "reflect-metadata": "^0.1.12",
    "rollbar": "^2.5.1",
    "rxjs": "^6.3.3",
    "ts-loader": "^5.3.1",
    "zone.js": "^0.8.29"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.13.5",
    "@angular-devkit/build-optimizer": "^0.13.5",
    "@angular/cdk": "^7.2.8",
    "@angular/cli": "^7.2.8",
    "@angular/compiler-cli": "^7.2.8",
    "@angular/language-service": "^7.2.8",
    "@babel/core": "^7.3.4",
    "@compodoc/compodoc": "^1.1.5",
    "@ngtools/webpack": "^7.3.5",
    "@types/core-js": "^2.5.0",
    "@types/d3": "^5.0.1",
    "@types/d3-shape": "^1.2.6",
    "@types/hammerjs": "^2.0.36",
    "@types/jasmine": "^3.3.9",
    "@types/mongodb": "^3.1.17",
    "@types/mongoose": "^5.3.3",
    "@types/node": "^10.12.12",
    "@types/source-map": "^0.5.7",
    "@types/uglify-js": "^3.0.4",
    "@types/webpack": "^4.4.20",
    "add-asset-html-webpack-plugin": "^3.1.2",
    "angular2-template-loader": "^0.6.2",
    "assets-webpack-plugin": "^3.9.7",
    "autoprefixer": "^9.4.7",
    "awesome-typescript-loader": "^5.2.1",
    "babel-core": "^6.26.3",
    "babel-loader": "^8.0.4",
    "babel-preset-env": "^1.7.0",
    "bootstrap": "^4.1.3",
    "browser-update": "^3.2.5",
    "codelyzer": "^4.5.0",
    "compression": "^1.7.3",
    "copy-webpack-plugin": "^4.6.0",
    "cross-env": "^5.2.0",
    "css-loader": "^1.0.1",
    "d3": "^5.7.0",
    "d3-symbol-extra": "^0.1.0",
    "dc": "^3.0.9",
    "debug": "^4.1.0",
    "doiuse": "^4.2.0",
    "dom-to-image-more": "^2.7.5",
    "exports-loader": "^0.7.0",
    "expose-loader": "^0.7.5",
    "file-loader": "^2.0.0",
    "file-saver": "^2.0.0",
    "find-root": "^1.1.0",
    "font-awesome": "^4.7.0",
    "gh-pages": "^2.0.1",
    "helmet": "^3.15.0",
    "html-webpack-plugin": "^3.2.0",
    "imports-loader": "^0.8.0",
    "inline-manifest-webpack-plugin": "^4.0.2",
    "istanbul-instrumenter-loader": "^3.0.1",
    "jasmine-core": "^3.3.0",
    "jquery": "^3.3.1",
    "karma": "^4.0.1",
    "karma-chrome-launcher": "^2.2.0",
    "karma-coverage": "^1.1.2",
    "karma-coverage-istanbul-reporter": "^2.0.4",
    "karma-coveralls": "^2.1.0",
    "karma-jasmine": "^2.0.1",
    "karma-mocha-reporter": "^2.2.5",
    "karma-remap-coverage": "^0.1.5",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^4.0.0-rc.5",
    "lato-font": "^3.0.0",
    "mini-css-extract-plugin": "^0.4.5",
    "mkdirp": "^0.5.1",
    "ng-mocks": "^7.1.3",
    "ngx-webstorage": "^3.0.0-beta.14",
    "node-sass": "^4.11.0",
    "nodemon": "^1.18.7",
    "nodemon-webpack-plugin": "^4.0.6",
    "npm-run-all": "^4.1.5",
    "optimize-js-plugin": "^0.0.4",
    "parse5": "^5.1.0",
    "popper.js": "^1.14.6",
    "postcss": "^7.0.6",
    "postcss-loader": "^3.0.0",
    "preload-webpack-plugin": "^3.0.0-beta.3",
    "protractor": "^5.4.1",
    "puppeteer": "^1.11.0",
    "raw-loader": "^0.5.1",
    "rimraf": "^2.6.2",
    "rxjs-tslint": "^0.1.6",
    "sanitize.css": "^8.0.0",
    "sass-loader": "^7.1.0",
    "script-ext-html-webpack-plugin": "^2.1.3",
    "serverless-webpack": "^5.2.0",
    "source-map-loader": "^0.2.4",
    "string-replace-loader": "^2.1.1",
    "style-loader": "^0.23.1",
    "stylelint": "^9.10.1",
    "stylelint-no-unsupported-browser-features": "^3.0.2",
    "stylelint-webpack-plugin": "^0.10.5",
    "to-string-loader": "^1.1.5",
    "ts-node": "^7.0.1",
    "tslib": "^1.9.3",
    "tslint": "^5.11.0",
    "tslint-loader": "^3.6.0",
    "typedoc": "^0.14.2",
    "typescript": "~3.1.6",
    "uglifyjs-webpack-plugin": "^2.0.1",
    "url-loader": "^1.1.2",
    "webpack": "^4.29.1",
    "webpack-bundle-analyzer": "^3.0.3",
    "webpack-cli": "^3.2.3",
    "webpack-dev-middleware": "^3.4.0",
    "webpack-dev-server": "^3.1.14",
    "webpack-inline-manifest-plugin": "^4.0.1",
    "webpack-merge": "^4.1.4",
    "webpack-node-externals": "^1.7.2"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Sage-Bionetworks/Agora.git"
  },
  "bugs": {
    "url": "https://github.com/Sage-Bionetworks/Agora/issues"
  },
  "engines": {
    "node": ">= 8.0.0",
    "npm": ">= 5"
  }
}
